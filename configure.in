dnl Process this file with autoconf to produce a configure script.

dnl AC_INIT (package, version, [bug-report-email], [tarname])
AC_INIT([neurofitter],[1.0])

dnl check for this file's existence to make sure that the directory
dnl specified by --srcdir is the right one
AC_CONFIG_SRCDIR([README])

dnl Specify a header configuration file
AM_CONFIG_HEADER(neurofitter_config.h)

dnl Compute the canonical host-system type variable, host, and its
dnl three individual parts host_cpu, host_vendor, and host_os.
AC_CANONICAL_SYSTEM

dnl Initialize Automake
AM_INIT_AUTOMAKE

AC_DEFINE([HAVE_PKG_EO], 0, [Define if package EO is used.],neurofitter_have_eo=yes)
AC_DEFINE([HAVE_PKG_NOMAD], 0, [Define if package NOMAD is used.],neurofitter_have_nomad=yes)
AM_CONDITIONAL(USE_EO, test "$neurofitter_have_eo" = "yes")
AM_CONDITIONAL(USE_NOMAD, test "$neurofitter_have_nomad" = "yes")


AC_ARG_WITH([eo-src], 
	    [  --with-eo-src           build and use the bundled EO library], 
	    [if test "$withval" == "yes" -o "$withval" == "";
 	     then
		neurofitter_eo_src=yes
		AC_DEFINE(HAVE_PKG_EO,1)
		EO_CFLAGS=-Ieo
		EO_LDFLAGS=-Leo 
		AC_SUBST(EO_CFLAGS)
		AC_SUBST(EO_LDFLAGS)
	     fi])
AM_CONDITIONAL(BUILD_EO_SRC, test "$neurofitter_eo_src" = "yes")

AC_caolan_SEARCH_PACKAGE(EO, main, [es eoutils eo], es/make_es.h)
AC_caolan_SEARCH_PACKAGE(NOMAD, main, nomad, nomad)

dnl Search for C and C++ compilers starting with the specified list
AC_PROG_CC
AC_PROG_CXX
AC_LANG([C++])
ACX_MPI(neurofitter_have_mpi=yes)

AC_ARG_ENABLE([mpi], 
	    [  --enable-mpi            build MPI version of Neurofitter ], 
	    [if test "$neurofitter_have_mpi" == "yes" ;
	     then
	        neurofitter_use_mpi=yes
	     else
		AC_MSG_ERROR([mpic++ is required to build MPI Neurofitter])
             fi])
AM_CONDITIONAL(USE_MPI, test "$neurofitter_use_mpi" = "yes")

dnl Check for programs
AC_PROG_LIBTOOL
AC_PROG_INSTALL

DX_HTML_FEATURE(ON)
DX_PDF_FEATURE(ON)
DX_CHM_FEATURE(OFF)
DX_CHI_FEATURE(OFF)
DX_MAN_FEATURE(OFF)
DX_RTF_FEATURE(OFF)
DX_XML_FEATURE(OFF)
DX_PS_FEATURE(OFF)
DX_INIT_DOXYGEN(Neurofitter, doc/doxygen.config, doc)

dnl Check for libraries
AC_CHECK_LIB(m, log2, AC_DEFINE([HAVE_LOG2],[],[log2 function is present]))


dnl Search for the getopt function
AC_SEARCH_LIBS(getopt, [getopt], ,
               AC_MSG_ERROR(getopt function not found))

dnl Check for the xml2 library
AM_PATH_XML2(2.3.0, , AC_MSG_ERROR(xml2 (>= 2.3.0) library not found))


dnl Check for header files
AC_STDC_HEADERS
AC_CHECK_HEADERS(sys/resource.h)
AC_CHECK_HEADERS(getopt.h)

dnl Check for typedefs, structures, C compiler characteristics
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl This is an example how to specify different CFLAGS depending on
dnl the C compiler detected: 

dnl If gcc is present, use -Wall
if test "x$GCC" = "xyes"; then
  if test -z "`echo "$CFLAGS" | grep "\-Wall" 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi

dnl Check for library functions
AC_CHECK_FUNCS(sysconf gettimeofday select)

dnl debug flag 
AC_ARG_ENABLE(debug,
  [  --enable-debug          turn on debugging],
  [case "${enableval}" in
    "" | y | ye | yes) debug=true; 
		       CFLAGS=$(echo $CFLAGS -g | sed -e 's/-O\|-O2\|-O3//g') ; 
		       CXXFLAGS=$(echo $CXXFLAGS -g | sed -e 's/-O\|-O2\|-O3//g') ;;
    n | no) debug=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
  esac],
  [debug=false])
AM_CONDITIONAL(NEUROFITTER_DEBUG, test x$debug = xtrue)


dnl Create makefiles and other configuration files
AC_CONFIG_FILES([Makefile])

dnl Generate `config.status' and launch it
AC_OUTPUT

