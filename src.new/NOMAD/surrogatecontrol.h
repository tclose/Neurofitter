/******************************************************************************
* NOMAD -  Nonlinear Optimization for Mixed vAriables and Derivatives.        *
* Copyright (C) 2001-2004  Gilles Couture - Ecole Polytechnique,              *
*                          Charles Audet - Ecole Polytechnique,               *
*		           John Dennis - Rice University.                     *
*                                                                             *
* Author: Gilles Couture                                                      *
* École Polytechnique de Montréal - GERAD                                     *
* C.P. 6079, Succ. Centre-ville, Montréal (Québec) H3C 3A7 Canada             *
* Tel:  (514) 340-6053 x6928                                                  *
* Email: Gilles.Couture@gerad.ca                                              *
* Fax: (514) 340-5665                                                         *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation. You can find the              *
* GNU General Public License at:                                              *
*             http://www.gnu.org/copyleft/gpl.html                            *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
* You can find information on the NOMAD software at:                          *
*             http://www.gerad.ca/NOMAD/                                      *
******************************************************************************/

/* surrogatecontrol.h -- class definition for SurrogateControl, which is the
   context object between FunctionControl and Surrogate. */

#ifndef _SURROGATECONTROL_H_
#define _SURROGATECONTROL_H_
#include <vector>
using namespace std;
#include "surrogate.h"

class AugmentedPoint;

class SurrogateControl
{
/* SurrogateControl has the following variables:
   - an STL container, 'list_of_points'. It will contain all the points
     generated by the poll and search strategies.
   - a pointer to Surrogate. */
 private:
  unsigned int display_factor;
  std::vector<AugmentedPoint *> list_of_points;
  std::vector<AugmentedPoint *>::iterator a_point;
  Surrogate * surrogate;

  // The methods are described in "surrogatecontrol.cpp"
  int partition(std::vector<AugmentedPoint *> & unsorted_list, int m, int p);
  void quicksort(std::vector<AugmentedPoint *> & unsorted_list, int p, int q);
  void swap(std::vector<AugmentedPoint *> & unsorted_list, int i, int j);

 public:
  SurrogateControl(const unsigned int dim, const unsigned int truth_dim);
  ~SurrogateControl();
  void cleanList();
  void cleanSurrogate();
  void setDisplay(const unsigned int display);
  void showList();
  void sortThisList(std::vector<AugmentedPoint *> & unsorted_list);
  void store(const AugmentedPoint & ap);
  void update(const AugmentedPoint * inc);
};
#endif
