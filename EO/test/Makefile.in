# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###############################################################################
###############################################################################

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
check_PROGRAMS = t-eoParetoFitness$(EXEEXT) t-eoPareto$(EXEEXT) \
	t-eofitness$(EXEEXT) t-eoRandom$(EXEEXT) t-eobin$(EXEEXT) \
	t-eoVirus$(EXEEXT) t-MGE$(EXEEXT) t-MGE1bit$(EXEEXT) \
	t-MGE-control$(EXEEXT) t-eoStateAndParser$(EXEEXT) \
	t-eoCheckpointing$(EXEEXT) t-eoSSGA$(EXEEXT) \
	t-eoExternalEO$(EXEEXT) t-eoSymreg$(EXEEXT) t-eo$(EXEEXT) \
	t-eoReplacement$(EXEEXT) t-eoSelect$(EXEEXT) \
	t-eoGenOp$(EXEEXT) t-eoGA$(EXEEXT) t-eoReal$(EXEEXT) \
	t-eoVector$(EXEEXT) t-eoESAll$(EXEEXT) t-eoPBIL$(EXEEXT) \
	t-eoFitnessAssembled$(EXEEXT) t-eoFitnessAssembledEA$(EXEEXT) \
	t-eoRoulette$(EXEEXT) t-eoSharing$(EXEEXT)
subdir = test
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am_t_MGE_OBJECTS = t-MGE.$(OBJEXT)
t_MGE_OBJECTS = $(am_t_MGE_OBJECTS)
t_MGE_LDADD = $(LDADD)
am_t_MGE_control_OBJECTS = t-MGE-control.$(OBJEXT)
t_MGE_control_OBJECTS = $(am_t_MGE_control_OBJECTS)
t_MGE_control_LDADD = $(LDADD)
am_t_MGE1bit_OBJECTS = t-MGE1bit.$(OBJEXT)
t_MGE1bit_OBJECTS = $(am_t_MGE1bit_OBJECTS)
t_MGE1bit_LDADD = $(LDADD)
am_t_eo_OBJECTS = t-eo.$(OBJEXT)
t_eo_OBJECTS = $(am_t_eo_OBJECTS)
t_eo_LDADD = $(LDADD)
am_t_eoCheckpointing_OBJECTS = t-eoCheckpointing.$(OBJEXT)
t_eoCheckpointing_OBJECTS = $(am_t_eoCheckpointing_OBJECTS)
t_eoCheckpointing_LDADD = $(LDADD)
am_t_eoESAll_OBJECTS = t-eoESAll.$(OBJEXT)
t_eoESAll_OBJECTS = $(am_t_eoESAll_OBJECTS)
t_eoESAll_LDADD = $(LDADD)
am_t_eoExternalEO_OBJECTS = t-eoExternalEO.$(OBJEXT)
t_eoExternalEO_OBJECTS = $(am_t_eoExternalEO_OBJECTS)
t_eoExternalEO_LDADD = $(LDADD)
am_t_eoFitnessAssembled_OBJECTS = t-eoFitnessAssembled.$(OBJEXT)
t_eoFitnessAssembled_OBJECTS = $(am_t_eoFitnessAssembled_OBJECTS)
t_eoFitnessAssembled_LDADD = $(LDADD)
am_t_eoFitnessAssembledEA_OBJECTS = t-eoFitnessAssembledEA.$(OBJEXT)
t_eoFitnessAssembledEA_OBJECTS = $(am_t_eoFitnessAssembledEA_OBJECTS)
t_eoFitnessAssembledEA_LDADD = $(LDADD)
am_t_eoGA_OBJECTS = t-eoGA.$(OBJEXT)
t_eoGA_OBJECTS = $(am_t_eoGA_OBJECTS)
t_eoGA_LDADD = $(LDADD)
am_t_eoGenOp_OBJECTS = t-eoGenOp.$(OBJEXT)
t_eoGenOp_OBJECTS = $(am_t_eoGenOp_OBJECTS)
t_eoGenOp_LDADD = $(LDADD)
am_t_eoPBIL_OBJECTS = t-eoPBIL.$(OBJEXT)
t_eoPBIL_OBJECTS = $(am_t_eoPBIL_OBJECTS)
t_eoPBIL_LDADD = $(LDADD)
am_t_eoPareto_OBJECTS = t-eoPareto.$(OBJEXT)
t_eoPareto_OBJECTS = $(am_t_eoPareto_OBJECTS)
t_eoPareto_LDADD = $(LDADD)
am_t_eoParetoFitness_OBJECTS = t-eoParetoFitness.$(OBJEXT)
t_eoParetoFitness_OBJECTS = $(am_t_eoParetoFitness_OBJECTS)
t_eoParetoFitness_LDADD = $(LDADD)
am_t_eoRandom_OBJECTS = t-eoRandom.$(OBJEXT)
t_eoRandom_OBJECTS = $(am_t_eoRandom_OBJECTS)
t_eoRandom_LDADD = $(LDADD)
am_t_eoReal_OBJECTS = t-eoReal.$(OBJEXT)
t_eoReal_OBJECTS = $(am_t_eoReal_OBJECTS)
t_eoReal_LDADD = $(LDADD)
am_t_eoReplacement_OBJECTS = t-eoReplacement.$(OBJEXT)
t_eoReplacement_OBJECTS = $(am_t_eoReplacement_OBJECTS)
t_eoReplacement_LDADD = $(LDADD)
am_t_eoRoulette_OBJECTS = t-eoRoulette.$(OBJEXT)
t_eoRoulette_OBJECTS = $(am_t_eoRoulette_OBJECTS)
t_eoRoulette_LDADD = $(LDADD)
am_t_eoSSGA_OBJECTS = t-eoSSGA.$(OBJEXT)
t_eoSSGA_OBJECTS = $(am_t_eoSSGA_OBJECTS)
t_eoSSGA_LDADD = $(LDADD)
am_t_eoSelect_OBJECTS = t-eoSelect.$(OBJEXT)
t_eoSelect_OBJECTS = $(am_t_eoSelect_OBJECTS)
t_eoSelect_LDADD = $(LDADD)
am_t_eoSharing_OBJECTS = t-eoSharing.$(OBJEXT)
t_eoSharing_OBJECTS = $(am_t_eoSharing_OBJECTS)
t_eoSharing_LDADD = $(LDADD)
am_t_eoStateAndParser_OBJECTS = t-eoStateAndParser.$(OBJEXT)
t_eoStateAndParser_OBJECTS = $(am_t_eoStateAndParser_OBJECTS)
t_eoStateAndParser_LDADD = $(LDADD)
am_t_eoSymreg_OBJECTS = t-eoSymreg.$(OBJEXT)
t_eoSymreg_OBJECTS = $(am_t_eoSymreg_OBJECTS)
t_eoSymreg_LDADD = $(LDADD)
am_t_eoVector_OBJECTS = t-eoVector.$(OBJEXT)
t_eoVector_OBJECTS = $(am_t_eoVector_OBJECTS)
t_eoVector_LDADD = $(LDADD)
am_t_eoVirus_OBJECTS = t_eoVirus-t-eoVirus.$(OBJEXT)
t_eoVirus_OBJECTS = $(am_t_eoVirus_OBJECTS)
t_eoVirus_LDADD = $(LDADD)
am_t_eobin_OBJECTS = t-eobin.$(OBJEXT)
t_eobin_OBJECTS = $(am_t_eobin_OBJECTS)
t_eobin_LDADD = $(LDADD)
am_t_eofitness_OBJECTS = t-eofitness.$(OBJEXT)
t_eofitness_OBJECTS = $(am_t_eofitness_OBJECTS)
t_eofitness_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(t_MGE_SOURCES) $(t_MGE_control_SOURCES) \
	$(t_MGE1bit_SOURCES) $(t_eo_SOURCES) \
	$(t_eoCheckpointing_SOURCES) $(t_eoESAll_SOURCES) \
	$(t_eoExternalEO_SOURCES) $(t_eoFitnessAssembled_SOURCES) \
	$(t_eoFitnessAssembledEA_SOURCES) $(t_eoGA_SOURCES) \
	$(t_eoGenOp_SOURCES) $(t_eoPBIL_SOURCES) $(t_eoPareto_SOURCES) \
	$(t_eoParetoFitness_SOURCES) $(t_eoRandom_SOURCES) \
	$(t_eoReal_SOURCES) $(t_eoReplacement_SOURCES) \
	$(t_eoRoulette_SOURCES) $(t_eoSSGA_SOURCES) \
	$(t_eoSelect_SOURCES) $(t_eoSharing_SOURCES) \
	$(t_eoStateAndParser_SOURCES) $(t_eoSymreg_SOURCES) \
	$(t_eoVector_SOURCES) $(t_eoVirus_SOURCES) $(t_eobin_SOURCES) \
	$(t_eofitness_SOURCES)
DIST_SOURCES = $(t_MGE_SOURCES) $(t_MGE_control_SOURCES) \
	$(t_MGE1bit_SOURCES) $(t_eo_SOURCES) \
	$(t_eoCheckpointing_SOURCES) $(t_eoESAll_SOURCES) \
	$(t_eoExternalEO_SOURCES) $(t_eoFitnessAssembled_SOURCES) \
	$(t_eoFitnessAssembledEA_SOURCES) $(t_eoGA_SOURCES) \
	$(t_eoGenOp_SOURCES) $(t_eoPBIL_SOURCES) $(t_eoPareto_SOURCES) \
	$(t_eoParetoFitness_SOURCES) $(t_eoRandom_SOURCES) \
	$(t_eoReal_SOURCES) $(t_eoReplacement_SOURCES) \
	$(t_eoRoulette_SOURCES) $(t_eoSSGA_SOURCES) \
	$(t_eoSelect_SOURCES) $(t_eoSharing_SOURCES) \
	$(t_eoStateAndParser_SOURCES) $(t_eoSymreg_SOURCES) \
	$(t_eoVector_SOURCES) $(t_eoVirus_SOURCES) $(t_eobin_SOURCES) \
	$(t_eofitness_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = $(DEPS)
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_APPLICATIONS_FALSE = @USE_APPLICATIONS_FALSE@
USE_APPLICATIONS_TRUE = @USE_APPLICATIONS_TRUE@
USE_TUTORIAL_FALSE = @USE_TUTORIAL_FALSE@
USE_TUTORIAL_TRUE = @USE_TUTORIAL_TRUE@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
LIBEO = $(top_builddir)/src/libeo.a
LIBEOUTILS = $(top_builddir)/src/utils/libeoutils.a
LIBES = $(top_builddir)/src/es/libes.a
LIBGA = $(top_builddir)/src/ga/libga.a
TESTS = $(check_PROGRAMS) \
				run_tests # This script can be used to check command-line arguments

noinst_HEADERS = binary_value.h real_value.h RoyalRoad.h
AM_CXXFLAGS = -I$(top_srcdir)/src 
DEPS = $(LIBGA) $(LIBES) $(LIBEOUTILS) $(LIBEO)
CLEANFILES = monitor.csv t-eoRandom.out
EXTRA_DIST = run_tests

# extra flags for specific targets
t_eoVirus_CXXFLAGS = $(AM_CXXFLAGS) -I$(top_srcdir)/contrib

# Specify source-files,
# otherwise automake/make looks for C sources
#
t_eoRandom_SOURCES = t-eoRandom.cpp
t_eofitness_SOURCES = t-eofitness.cpp
t_eoFitnessAssembledEA_SOURCES = t-eoFitnessAssembledEA.cpp
t_eobin_SOURCES = t-eobin.cpp
t_eoVirus_SOURCES = t-eoVirus.cpp
t_MGE1bit_SOURCES = t-MGE1bit.cpp
t_MGE_SOURCES = t-MGE.cpp
t_MGE_control_SOURCES = t-MGE-control.cpp
t_eoStateAndParser_SOURCES = t-eoStateAndParser.cpp
t_eoCheckpointing_SOURCES = t-eoCheckpointing.cpp
t_eoReplacement_SOURCES = t-eoReplacement.cpp
t_eoSelect_SOURCES = t-eoSelect.cpp
t_eoExternalEO_SOURCES = t-eoExternalEO.cpp
t_eoSymreg_SOURCES = t-eoSymreg.cpp
t_eo_SOURCES = t-eo.cpp
t_eoGenOp_SOURCES = t-eoGenOp.cpp
t_eoVector_SOURCES = t-eoVector.cpp
t_eoGA_SOURCES = t-eoGA.cpp
t_eoReal_SOURCES = t-eoReal.cpp
t_eoESAll_SOURCES = t-eoESAll.cpp
t_eoSSGA_SOURCES = t-eoSSGA.cpp
t_eoPareto_SOURCES = t-eoPareto.cpp 
t_eoParetoFitness_SOURCES = t-eoParetoFitness.cpp 
t_eoPBIL_SOURCES = t-eoPBIL.cpp 
t_eoFitnessAssembled_SOURCES = t-eoFitnessAssembled.cpp 
t_eoRoulette_SOURCES = t-eoRoulette.cpp
t_eoSharing_SOURCES = t-eoSharing.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  test/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
t-MGE$(EXEEXT): $(t_MGE_OBJECTS) $(t_MGE_DEPENDENCIES) 
	@rm -f t-MGE$(EXEEXT)
	$(CXXLINK) $(t_MGE_LDFLAGS) $(t_MGE_OBJECTS) $(t_MGE_LDADD) $(LIBS)
t-MGE-control$(EXEEXT): $(t_MGE_control_OBJECTS) $(t_MGE_control_DEPENDENCIES) 
	@rm -f t-MGE-control$(EXEEXT)
	$(CXXLINK) $(t_MGE_control_LDFLAGS) $(t_MGE_control_OBJECTS) $(t_MGE_control_LDADD) $(LIBS)
t-MGE1bit$(EXEEXT): $(t_MGE1bit_OBJECTS) $(t_MGE1bit_DEPENDENCIES) 
	@rm -f t-MGE1bit$(EXEEXT)
	$(CXXLINK) $(t_MGE1bit_LDFLAGS) $(t_MGE1bit_OBJECTS) $(t_MGE1bit_LDADD) $(LIBS)
t-eo$(EXEEXT): $(t_eo_OBJECTS) $(t_eo_DEPENDENCIES) 
	@rm -f t-eo$(EXEEXT)
	$(CXXLINK) $(t_eo_LDFLAGS) $(t_eo_OBJECTS) $(t_eo_LDADD) $(LIBS)
t-eoCheckpointing$(EXEEXT): $(t_eoCheckpointing_OBJECTS) $(t_eoCheckpointing_DEPENDENCIES) 
	@rm -f t-eoCheckpointing$(EXEEXT)
	$(CXXLINK) $(t_eoCheckpointing_LDFLAGS) $(t_eoCheckpointing_OBJECTS) $(t_eoCheckpointing_LDADD) $(LIBS)
t-eoESAll$(EXEEXT): $(t_eoESAll_OBJECTS) $(t_eoESAll_DEPENDENCIES) 
	@rm -f t-eoESAll$(EXEEXT)
	$(CXXLINK) $(t_eoESAll_LDFLAGS) $(t_eoESAll_OBJECTS) $(t_eoESAll_LDADD) $(LIBS)
t-eoExternalEO$(EXEEXT): $(t_eoExternalEO_OBJECTS) $(t_eoExternalEO_DEPENDENCIES) 
	@rm -f t-eoExternalEO$(EXEEXT)
	$(CXXLINK) $(t_eoExternalEO_LDFLAGS) $(t_eoExternalEO_OBJECTS) $(t_eoExternalEO_LDADD) $(LIBS)
t-eoFitnessAssembled$(EXEEXT): $(t_eoFitnessAssembled_OBJECTS) $(t_eoFitnessAssembled_DEPENDENCIES) 
	@rm -f t-eoFitnessAssembled$(EXEEXT)
	$(CXXLINK) $(t_eoFitnessAssembled_LDFLAGS) $(t_eoFitnessAssembled_OBJECTS) $(t_eoFitnessAssembled_LDADD) $(LIBS)
t-eoFitnessAssembledEA$(EXEEXT): $(t_eoFitnessAssembledEA_OBJECTS) $(t_eoFitnessAssembledEA_DEPENDENCIES) 
	@rm -f t-eoFitnessAssembledEA$(EXEEXT)
	$(CXXLINK) $(t_eoFitnessAssembledEA_LDFLAGS) $(t_eoFitnessAssembledEA_OBJECTS) $(t_eoFitnessAssembledEA_LDADD) $(LIBS)
t-eoGA$(EXEEXT): $(t_eoGA_OBJECTS) $(t_eoGA_DEPENDENCIES) 
	@rm -f t-eoGA$(EXEEXT)
	$(CXXLINK) $(t_eoGA_LDFLAGS) $(t_eoGA_OBJECTS) $(t_eoGA_LDADD) $(LIBS)
t-eoGenOp$(EXEEXT): $(t_eoGenOp_OBJECTS) $(t_eoGenOp_DEPENDENCIES) 
	@rm -f t-eoGenOp$(EXEEXT)
	$(CXXLINK) $(t_eoGenOp_LDFLAGS) $(t_eoGenOp_OBJECTS) $(t_eoGenOp_LDADD) $(LIBS)
t-eoPBIL$(EXEEXT): $(t_eoPBIL_OBJECTS) $(t_eoPBIL_DEPENDENCIES) 
	@rm -f t-eoPBIL$(EXEEXT)
	$(CXXLINK) $(t_eoPBIL_LDFLAGS) $(t_eoPBIL_OBJECTS) $(t_eoPBIL_LDADD) $(LIBS)
t-eoPareto$(EXEEXT): $(t_eoPareto_OBJECTS) $(t_eoPareto_DEPENDENCIES) 
	@rm -f t-eoPareto$(EXEEXT)
	$(CXXLINK) $(t_eoPareto_LDFLAGS) $(t_eoPareto_OBJECTS) $(t_eoPareto_LDADD) $(LIBS)
t-eoParetoFitness$(EXEEXT): $(t_eoParetoFitness_OBJECTS) $(t_eoParetoFitness_DEPENDENCIES) 
	@rm -f t-eoParetoFitness$(EXEEXT)
	$(CXXLINK) $(t_eoParetoFitness_LDFLAGS) $(t_eoParetoFitness_OBJECTS) $(t_eoParetoFitness_LDADD) $(LIBS)
t-eoRandom$(EXEEXT): $(t_eoRandom_OBJECTS) $(t_eoRandom_DEPENDENCIES) 
	@rm -f t-eoRandom$(EXEEXT)
	$(CXXLINK) $(t_eoRandom_LDFLAGS) $(t_eoRandom_OBJECTS) $(t_eoRandom_LDADD) $(LIBS)
t-eoReal$(EXEEXT): $(t_eoReal_OBJECTS) $(t_eoReal_DEPENDENCIES) 
	@rm -f t-eoReal$(EXEEXT)
	$(CXXLINK) $(t_eoReal_LDFLAGS) $(t_eoReal_OBJECTS) $(t_eoReal_LDADD) $(LIBS)
t-eoReplacement$(EXEEXT): $(t_eoReplacement_OBJECTS) $(t_eoReplacement_DEPENDENCIES) 
	@rm -f t-eoReplacement$(EXEEXT)
	$(CXXLINK) $(t_eoReplacement_LDFLAGS) $(t_eoReplacement_OBJECTS) $(t_eoReplacement_LDADD) $(LIBS)
t-eoRoulette$(EXEEXT): $(t_eoRoulette_OBJECTS) $(t_eoRoulette_DEPENDENCIES) 
	@rm -f t-eoRoulette$(EXEEXT)
	$(CXXLINK) $(t_eoRoulette_LDFLAGS) $(t_eoRoulette_OBJECTS) $(t_eoRoulette_LDADD) $(LIBS)
t-eoSSGA$(EXEEXT): $(t_eoSSGA_OBJECTS) $(t_eoSSGA_DEPENDENCIES) 
	@rm -f t-eoSSGA$(EXEEXT)
	$(CXXLINK) $(t_eoSSGA_LDFLAGS) $(t_eoSSGA_OBJECTS) $(t_eoSSGA_LDADD) $(LIBS)
t-eoSelect$(EXEEXT): $(t_eoSelect_OBJECTS) $(t_eoSelect_DEPENDENCIES) 
	@rm -f t-eoSelect$(EXEEXT)
	$(CXXLINK) $(t_eoSelect_LDFLAGS) $(t_eoSelect_OBJECTS) $(t_eoSelect_LDADD) $(LIBS)
t-eoSharing$(EXEEXT): $(t_eoSharing_OBJECTS) $(t_eoSharing_DEPENDENCIES) 
	@rm -f t-eoSharing$(EXEEXT)
	$(CXXLINK) $(t_eoSharing_LDFLAGS) $(t_eoSharing_OBJECTS) $(t_eoSharing_LDADD) $(LIBS)
t-eoStateAndParser$(EXEEXT): $(t_eoStateAndParser_OBJECTS) $(t_eoStateAndParser_DEPENDENCIES) 
	@rm -f t-eoStateAndParser$(EXEEXT)
	$(CXXLINK) $(t_eoStateAndParser_LDFLAGS) $(t_eoStateAndParser_OBJECTS) $(t_eoStateAndParser_LDADD) $(LIBS)
t-eoSymreg$(EXEEXT): $(t_eoSymreg_OBJECTS) $(t_eoSymreg_DEPENDENCIES) 
	@rm -f t-eoSymreg$(EXEEXT)
	$(CXXLINK) $(t_eoSymreg_LDFLAGS) $(t_eoSymreg_OBJECTS) $(t_eoSymreg_LDADD) $(LIBS)
t-eoVector$(EXEEXT): $(t_eoVector_OBJECTS) $(t_eoVector_DEPENDENCIES) 
	@rm -f t-eoVector$(EXEEXT)
	$(CXXLINK) $(t_eoVector_LDFLAGS) $(t_eoVector_OBJECTS) $(t_eoVector_LDADD) $(LIBS)
t-eoVirus$(EXEEXT): $(t_eoVirus_OBJECTS) $(t_eoVirus_DEPENDENCIES) 
	@rm -f t-eoVirus$(EXEEXT)
	$(CXXLINK) $(t_eoVirus_LDFLAGS) $(t_eoVirus_OBJECTS) $(t_eoVirus_LDADD) $(LIBS)
t-eobin$(EXEEXT): $(t_eobin_OBJECTS) $(t_eobin_DEPENDENCIES) 
	@rm -f t-eobin$(EXEEXT)
	$(CXXLINK) $(t_eobin_LDFLAGS) $(t_eobin_OBJECTS) $(t_eobin_LDADD) $(LIBS)
t-eofitness$(EXEEXT): $(t_eofitness_OBJECTS) $(t_eofitness_DEPENDENCIES) 
	@rm -f t-eofitness$(EXEEXT)
	$(CXXLINK) $(t_eofitness_LDFLAGS) $(t_eofitness_OBJECTS) $(t_eofitness_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-MGE-control.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-MGE.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-MGE1bit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoCheckpointing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoESAll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoExternalEO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoFitnessAssembled.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoFitnessAssembledEA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoGA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoGenOp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoPBIL.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoPareto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoParetoFitness.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoRandom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoReal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoReplacement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoRoulette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoSSGA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoSelect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoSharing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoStateAndParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoSymreg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eoVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eobin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t-eofitness.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_eoVirus-t-eoVirus.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

t_eoVirus-t-eoVirus.o: t-eoVirus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_eoVirus_CXXFLAGS) $(CXXFLAGS) -MT t_eoVirus-t-eoVirus.o -MD -MP -MF "$(DEPDIR)/t_eoVirus-t-eoVirus.Tpo" -c -o t_eoVirus-t-eoVirus.o `test -f 't-eoVirus.cpp' || echo '$(srcdir)/'`t-eoVirus.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/t_eoVirus-t-eoVirus.Tpo" "$(DEPDIR)/t_eoVirus-t-eoVirus.Po"; else rm -f "$(DEPDIR)/t_eoVirus-t-eoVirus.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='t-eoVirus.cpp' object='t_eoVirus-t-eoVirus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_eoVirus_CXXFLAGS) $(CXXFLAGS) -c -o t_eoVirus-t-eoVirus.o `test -f 't-eoVirus.cpp' || echo '$(srcdir)/'`t-eoVirus.cpp

t_eoVirus-t-eoVirus.obj: t-eoVirus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_eoVirus_CXXFLAGS) $(CXXFLAGS) -MT t_eoVirus-t-eoVirus.obj -MD -MP -MF "$(DEPDIR)/t_eoVirus-t-eoVirus.Tpo" -c -o t_eoVirus-t-eoVirus.obj `if test -f 't-eoVirus.cpp'; then $(CYGPATH_W) 't-eoVirus.cpp'; else $(CYGPATH_W) '$(srcdir)/t-eoVirus.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/t_eoVirus-t-eoVirus.Tpo" "$(DEPDIR)/t_eoVirus-t-eoVirus.Po"; else rm -f "$(DEPDIR)/t_eoVirus-t-eoVirus.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='t-eoVirus.cpp' object='t_eoVirus-t-eoVirus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(t_eoVirus_CXXFLAGS) $(CXXFLAGS) -c -o t_eoVirus-t-eoVirus.obj `if test -f 't-eoVirus.cpp'; then $(CYGPATH_W) 't-eoVirus.cpp'; else $(CYGPATH_W) '$(srcdir)/t-eoVirus.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
