The FitterType tag in the settings.xml file determines the optimization algorithm used by Neurofitter.
<FitterType>...</FitterType>
<FitterParameters>
...
</FitterParameters>

Possible types are:
- Mesh

	Calculates the error values on a mesh in the parameter hyperspace

- Random

	Calculates the error values at uniformly distributed points in the parameter hyperspace	
	Settings:
		Number of parameter space points evaluated
			<NumberOfPoints>...</NumberOfPoints

- File

	Reads parameter sets from a file, and calculates the error value in these points.
	
	The file should contain 1 line for every parameter set, with parameter values seperated by spaces
	Settings:
		Number of parameter space points in the file
			<NumberOfPoints>...</NumberOfPoints>
		The name of the file to read from
        	<Filename>...</Filename>

- Swarm

	Uses the Particle Swarm Optimization 2006 algorithm
	The number of parameter sets evaluated is given by NumberOfRuns*floor(10.0+2.0*sqrt(NumberOfDimensions))

	Settings:
		Number of "evolutions" you want the swarm optimization to run:
			<NumberOfRuns>...</NumberOfRuns>

- EO

	Uses Evolutionary Strategies

	Settings:
		Population size
			<popSize>...</popSize>
		Number of offspring
        	<nbOffspring>...</nbOffspring>
		Replacement strategy
        	<replacement>...</replacement>
		Maximum number of generations
        	<maxGen>...</maxGen>
		Minimum number of generations
        	<minGen>...</minGen>
		Maximum number of error evaluations
        	<maxEval>...</maxEval>
		Error value of the perfect solution
        	<targetFitness>...</targetFitness>
        Termination criterium: maximum number of generations without improvement
			<steadyGen>...</steadyGen>
		Other EO parameters
        	<crossType>global</crossType>
        	<crossObj>intermediate</crossObj>
        	<TauLoc>1</TauLoc>
        	<TauGlob>1</TauGlob>
        	<Beta>0.0873</Beta>
	
- NOMAD

	Uses the NOMAD, Mesh Adaptive Search algorithm

	Settings:
        <outputfile>output.dat</outputfile>

        <!-- parameters.dat -->
        <COARSENING_EXPONENT>   2</COARSENING_EXPONENT> <!-- Exponent to enlarge poll size in case of failure -->
        <INITIAL_POLL_SIZE>     1</INITIAL_POLL_SIZE>
        <POLL_BASIS>            4</POLL_BASIS>
        <REFINING_EXPONENT>     -2</REFINING_EXPONENT>
        <MAX_POLL_SIZE>         100000</MAX_POLL_SIZE>

        <POLL_ORDER>            0</POLL_ORDER> <!-- Dynamic 0/1 -->
        <POLL_COMPLETE>         0</POLL_COMPLETE> <!-- Opportunistic 0/1 -->
        <POLL_DIRECTIONS>       4</POLL_DIRECTIONS> <!-- MADS directions 0/1/2/3/4-->

        <INITIAL_SEARCH>        0</INITIAL_SEARCH> <!-- No initial search 0/1/3 -->
        <INITIAL_COMPLETE>      0</INITIAL_COMPLETE> <!-- Opportunistic 0/1 -->
        <INITIAL_POINTS>        2</INITIAL_POINTS> <!-- Number of points after initial search -->

        <ITERATIVE_SEARCH>      1</ITERATIVE_SEARCH> <!-- Random search at start every iteration 0/1/2 -->
        <ITERATIVE_COMPLETE>    0</ITERATIVE_COMPLETE> <!-- Opportunistic 0/1 -->
        <ITERATIVE_POINTS>      4</ITERATIVE_POINTS> <!-- Number of points generated by iteration -->

        <SPECULATIVE_SEARCH>    1</SPECULATIVE_SEARCH> <!-- Do a search in poll direction (only MADS) 0/1 -->

        <POLL_SIZE_TERM>        -1</POLL_SIZE_TERM> <!-- Terminate when poll size is smaller than this value -->
		<ITERATIONS>            -1</ITERATIONS> <!-- Max number of iterations -->
        <TRUTH_EVALS>           10</TRUTH_EVALS> <!-- Max number of truth evaluations -->
        <NEW_TRUTH_EVALS>       -1</NEW_TRUTH_EVALS> <!-- Max number of non-cache truth evaluations -->
        <CONSECUTIVE_FAILS>     -1</CONSECUTIVE_FAILS> <!-- Max number of consecutive better-solution-failures -->

        <FILTER_RELATIVE>       1</FILTER_RELATIVE> <!-- HMax is relative to starting point 0/1 -->
        <HMAX>                  50000</HMAX>
        <HMIN>                  0.0001</HMIN>
        <FILTER_NORM>           2</FILTER_NORM> <!-- L-2 squared norm 0/1/2 -->

        <SURROGATE_TOLERANCE>   0</SURROGATE_TOLERANCE>

        <!-- description.dat -->
        <SCALING_CHOICE>        0</SCALING_CHOICE> <!-- No scaling 0/1/2/3 -->
        <GEN_CONS_NB>           0</GEN_CONS_NB> <!-- Number of constraints -->
        <USE_SURROGATE>         0</USE_SURROGATE> <!-- Use surrogate 0/1 -->

        <START_PT_FILE>start_pt.txt</START_PT_FILE>
        <BOUNDS_FILE>bounds.txt</BOUNDS_FILE>
        <RESULTS_FILE>results.txt</RESULTS_FILE>


- EONOMAD

	First uses EO to come to a good solution, and then uses the best solution found as input to NOMAD

	Settings:
		Settings for EO to be used (see above)
        	<EOFitterParameters>
				...
			</EOFittterParameters>
		Settings for NOMAD to be used (see above)
        	<NOMADFitterParameters>
				...
			</NOMADFittterParameters>
 
